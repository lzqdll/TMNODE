const https = require('http');
const StringDecoder = require('string_decoder').StringDecoder;
const decoder = new StringDecoder('utf8');
var querystring = require('querystring');
const lbtargetpath = '/TM/cp/cpgetleavebalance.action?searchTable=leavebalance';
const applicationAddingpath = '/TM/cp/application.action?';
const ssologin = '/TM/cp/ssologin.action?';
var pathoptions = {
	hostname : '192.168.30.37',
	port : 80
	//	path : '/TM/cp/cpgetleavebalance.action?searchTable=leavebalance',
	//method : 'GET'
};
get = function (pathoptions, cb) {
	pathoptions.method = 'GET';
	https.get(pathoptions, function (response) {
		if (response.statusCode === 200) {
			var body = '';
			response.on('data', function (data) {
				body += data;
			}).on('end', function () {
				var result = JSON.parse(body);
				if (result !== undefined) {
					cb.success(result);
				} else {
					cb.error(result);
				}
			});
		} else {
			cb.error(response.statusCode);
		}
	});
},

post = function (pathoptions, data, cb) {
	console.log(data);
	//console.log(querystring.stringify(data) );
	pathoptions.method = 'POST';
	pathoptions.headers = {
		'Content-Type' : 'application/json'
	};
	if (data !== undefined)
		pathoptions.path += querystring.stringify(data);
	console.log(pathoptions.path);
	var req = https.request(pathoptions, function (response) {
			if (response.statusCode === 200) {
				var body = '';
				response.on('data', function (data) {
					body += data;
				}).on('end', function () {
					var result = JSON.parse(body);
					console.log(result);
					if (result.success) {
						cb.success(result);
					} else {
						cb.error(result);
					}
				});
			} else {
				cb.error(response.statusCode);
			}
		});
	req.write(data + '\n');
	req.end();
}
module.exports = {
	SSOlogin : function (mobile, callback) {
		console.log("SSOLOGIN start");
		pathoptions.path = ssologin + 'mobile=' + mobile;
		get(pathoptions, callback);
	},
	getleavebalance : function (user, tt, callback) {
		pathoptions.path = lbtargetpath + '&userid=' + user.id;
		get(pathoptions, callback);
	},
	applicationAdding : function (user, obj, callback) {
		//console.log('leavebalance.js user id: '+ user.id);
		pathoptions.path = applicationAddingpath + '&userID=' + user.id+'&';
		post(pathoptions, obj, callback);
	}
}
